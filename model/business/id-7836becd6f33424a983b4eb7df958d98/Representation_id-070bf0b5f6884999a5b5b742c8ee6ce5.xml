<archimate:Representation
    xmlns:archimate="http://www.archimatetool.com/archimate"
    name="Verdieping: abonneren en notificeren"
    id="id-070bf0b5f6884999a5b5b742c8ee6ce5"
    documentation="&lt;p>Dit hoofdstuk beschrijft architectuuraspecten die van belang zijn bij abonneren en notificeren. Het start met een overzicht van de terminologie, het belang van een gebeurtenisgedreven werkwijze en een uitwerking van de architectuur. Het gaat vervolgens dieper in op de relevante standaarden.&lt;/p>&#xD;&#xA;&lt;h3>Terminologie&lt;/h3>&#xD;&#xA;&lt;p>Als we spreken over abonneren en notificeren, refereren we in meer algemene zin naar een gebeurtenisgedreven werkwijze. Notificeren is het door een aanbieder aan afnemers verstrekken van gegevens over plaatsgevonden gebeurtenissen. Abonneren is het door afnemers aangeven voor welke typen gebeurtenissen zij genotificeerd willen worden. Bij notificeren vormen plaatsgevonden gebeurtenissen de trigger om gegevens te gaan uitwisselen. Het initiatief daarvoor ligt bij de aanbieder die gegevens verstrekt over binnen zijn domein plaatsgevonden gebeurtenissen (“don’t call us, we’ll call you”). Deze manier van gegevens uitwisselen is fundamenteel anders dan wanneer een aanbieder een service aanbiedt en afnemers zelf het initiatief nemen om gegevens op te gaan halen. Gebruikers van smartphones vinden het vanzelfsprekend dat zij kunnen aangeven voor welke type gebeurtenissen zij notificaties willen ontvangen.&#xD;&#xA;&lt;/p>&lt;p>&#xD;&#xA;In meer algemene zin wordt vaak gesproken over “publish-subscribe”. Daarbij produceren applicaties (producers) berichten over plaatsgevonden gebeurtenissen (events). Afnemende applicaties (consumers) nemen een abonnement (subscription) op bepaalde soorten berichten. Makelaars (intermediairy’s) kunnen bemiddelen tussen producers en consumers om gepubliceerde events aan de juiste consumers te verstrekken. Consumers ontvangen de soorten events waarop ze zijn geabonneerd. Onderstaande figuur geeft de beschreven rolverdeling weer.&lt;/p>&#xD;&#xA; &lt;p>&lt;img src=&quot;https://minbzk.github.io/gdi-gegevensuitwisseling/images/cloudevents.jpg&quot;>&lt;/p>&#xD;&#xA;&lt;p>Applicaties kunnen eigendom zijn van één of meerdere organisaties en kunnen (in verschillende samenstellingen) ook gecombineerd zijn. Bij een uitwisseling kunnen één of meerdere intermediairs een rol spelen. De afspraken tussen betrokken partijen over de gegevensuitwisseling zijn sterk vergelijkbaar met de algemeen geldende afspraken bij gegevensuitwisseling. &lt;/p>&#xD;&#xA;&lt;h3>Belang van een gebeurtenisgedreven werkwijze&lt;/h3>&#xD;&#xA;&lt;p>&#xD;&#xA;Binnen de context van de Nederlandse overheid is een gebeurtenisgedreven gegevensuitwisseling belangrijk. Het zorgt ervoor dat organisaties die gegevens hebben afgenomen zeker weten dat zij nog met actuele gegevens werken. Zij willen genotificeerd worden als er (mogelijk) relevante wijzigingen in brongegevens hebben plaatsgevonden. Dat kan bijvoorbeeld zo zijn als een eerder opgevraagd gegeven foutief was en is gecorrigeerd of als de status van een gegeven is gewijzigd na het moment van afnemen. Het is ook belangrijk in de context van levensgebeurtenissen, waar op dit moment aandacht voor is. Levensgebeurtenissen zijn belangrijke gebeurtenissen in het leven van een burger. Om hier als overheid goed op te kunnen acteren moeten per type gebeurtenis alle organisaties worden genotificeerd waarbij het belangrijk is dat op de hoogte zijn van het feit dat de gebeurtenis heeft plaatsgevonden. Het kan het ook mogelijk maken om meer als één overheid naar de burger op te treden. Effectief notificeren is nodig om als overheid voldoende flexibel, schaalbaar en responsief te zijn en te voldoen aan de eisen die de moderne maatschappij stelt.&#xD;&#xA;&lt;/p>&lt;p>&#xD;&#xA;Een gebeurtenisgedreven werkwijze heeft ook meer algemene voordelen, zoals:&#xD;&#xA;&lt;ul>&#xD;&#xA;&lt;li>Real-time kunnen reageren: Systemen kunnen real-time reageren op plaatsgevonden gebeurtenissen en veranderingen in de omgeving. &lt;/li>&#xD;&#xA;&lt;li>Schaalbaarheid vergroten: Dit type architectuur is geschikt om veel gebeurtenissen en verzoeken te verwerken zonder dat dit ten koste gaat van de prestaties of beschikbaarheid.&lt;/li>&#xD;&#xA;&lt;li>Losse koppeling realiseren: Door gebruik van gebeurtenisberichten hoeven componenten niet direct met elkaar te communiceren, waardoor ze onafhankelijker van elkaar worden en gemakkelijker zijn te wijzigen, onderhouden en op te schalen.&lt;/li>&#xD;&#xA;&lt;li>Herbruiken van events: Gepubliceerde events kunnen voor allerlei doeleinden en binnen verschillende contexten worden gebruikt.&lt;/li>&#xD;&#xA;&lt;li>Flexibel aanpassen: Nieuwe functionaliteiten kunnen eenvoudig worden toegevoegd door nieuwe soorten events te publiceren en verschillende soorten reacties hierop te implementeren.&lt;/li>&#xD;&#xA;&lt;li>Integreren via events: Door gebeurtenissen te gebruiken als gemeenschappelijk communicatiemiddel kunnen systemen gemakkelijk met elkaar communiceren, ook als ze verschillende technologieën of protocollen gebruiken.&lt;/li>&#xD;&#xA;&lt;/ul>&#xD;&#xA;Er zijn eerder verschillende handreikingen geschreven die organisaties kunnen ondersteunen. De handreiking &lt;a href=&quot;https://github.com/VNG-Realisatie/notificatieservices/blob/main/docs/achtergronddocumentatie/introductie_van_notificeren.pdf&quot;>&quot;Introductie van notificeren&quot;&lt;/a> geeft een algemene uitleg over het onderwerp. De handreiking &lt;a href=&quot;https://github.com/VNG-Realisatie/notificatieservices/blob/main/docs/achtergronddocumentatie/waarom_notificeren.pdf&quot;>&quot;Waarom Notificeren&quot;&lt;/a> beschrijft waarom het belangrijk is. De handreiking &lt;a href=&quot;https://github.com/VNG-Realisatie/notificatieservices/blob/main/docs/achtergronddocumentatie/gebeurtenistypes_definieren.pdf&quot;>&quot;Gebeurtenistypes definiëren&quot;&lt;/a> helpt organisaties bij het in kaart brengen en organiseren van gebeurtenissen. De handreiking &lt;a href=&quot;https://github.com/VNG-Realisatie/notificatieservices/blob/main/docs/achtergronddocumentatie/notificatiescenarios.pdf&quot;>Notificatiescenarios&lt;/a> beschrijft zes verschillende scenario’s voor het gebruik van notificeren.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;h3>Applicatie-architectuur&lt;/h3>&#xD;&#xA;&lt;p>De functionaliteit voor abonneren wordt op dit moment veelal geboden via interactieve schermen. Daarop kan een gebruiker aangeven welke soorten events hij wel en niet willen ontvangen. Het kan gaan om eenvoudige invulschermen of om schermen waarmee een gebruiker zelf complexe selectieregels kan definiëren. Soms wordt aanvullend de mogelijkheid geboden om periodiek geautomatiseerd bepaalde filter-gegevens aan te leveren. Bijvoorbeeld in de vorm van een periodiek aangeleverd bestand of via een API waarmee een afnemer gegevens aanlevert die worden gebruikt om events te filteren. Een voorbeeld hiervan is een verzameling BSN’s van personen waarvoor events moeten worden verstrekt.&#xD;&#xA;&lt;/p>&lt;p>&#xD;&#xA;Het is ook mogelijk om abonnementen geautomatiseerd via API’s vast te leggen, te wijzigen of verwijderen. Dit biedt nieuwe mogelijkheden, zoals het afsluiten van (heel) veel kleine abonnementen waarin in detail is beschreven in welke events een afnemer is geïnteresseerd. Bijvoorbeeld door per persoon waarvoor genotificeerd moeten worden een eigen abonnement af te sluiten. &#xD;&#xA;&lt;/p>&lt;p>&#xD;&#xA;Abonneren krijgt nu beperkt aandacht omdat de noodzaak van standaardisatie nu minder groot is en omdat gestandaardiseerd geautomatiseerd abonneren zeer complex is. De belangrijkste reden hiervoor is dat voor een standaard veel soorten metagegevens nodig zijn om in alle situaties bruikbaar te zijn, waardoor de standaard snel (te) complex wordt. Het zelf ontwikkelen van een abonneerstandaard is niet wenselijk, maar het is wel wenselijk om internationale ontwikkelingen op dit vlak te volgen en te zijner tijd daarop aan te sluiten.&#xD;&#xA;&lt;/p>&lt;p>&#xD;&#xA;Notificeren gaat over het verzenden van events. Een event is een data record dat een plaatsgevonden gebeurtenis beschrijft. Het bevat metagegevens over context voor bijvoorbeeld het kunnen routeren van het event van producers naar consumers en het bevat inhoudelijke informatie over de plaatsgevonden gebeurtenis of een verwijzing naar waar die is te vinden. Events worden getransporteerd via, gestructureerde of binaire, berichten. Voor een event wordt gebruik gemaakt van een bepaald formaat (bijv. JSON of XML) en transportprotocol (bijv. HTTP of AMQP). Bij notificeren gaat het in het algemeen over gebeurtenissen die hebben plaatsgevonden (‘feiten’), niet over gebeurtenissen in de toekomst.&#xD;&#xA;&lt;/p>&lt;p>&#xD;&#xA;Voor notificeren zijn een aantal functionaliteiten relevant: routeren, filteren en verstrekken. Routeren is het fysiek transporteren van events zodat ze vanuit producers bij consumers terecht komen. Filteren is het binnen alle gepubliceerde event per consumer selecteren van de juiste events. Verstrekken is het beschikbaar stellen van events aan consumers via een bezorg- of ophaalmechanisme. Het initiatief voor verstrekking kan liggen bij een intermediary of een consumer.&#xD;&#xA;&lt;/p>&lt;p>&#xD;&#xA;Bij notificeren kan de communicatie tussen applicaties synchroon of asynchroon verlopen. Bij Asynchrone communicatie wacht de verzender niet op een antwoord van de ontvanger. Asynchrone communicatie biedt voordelen qua schaalbaarheid, flexibiliteit, foutbestendigheid en efficiëntie bij notificeren. Een notificatie die niet kan worden verstrekt omdat een consumer niet actief is kan dan bijvoorbeeld door een intermediair worden bewaard en op een later moment als de consumer actief is alsnog worden verstrekt. Bij gebeurtenisgedreven werken, inclusief notifiëren, verdient asynchrone communicatie daarom de voorkeur. &lt;/p>&#xD;&#xA;&lt;h3>Standaarden&lt;/h3>&#xD;&#xA;&lt;p>Van 2021 tot 2023 is in opdracht van het Ministerie van Binnenlandse Zaken het project ‘Notificatieservices’ uitgevoerd. Een van de doelen daarvan was om een advies te geven over een standaard voor notificeren. Er is besloten om daarvoor voort te bouwen op de internationale standaard &lt;a href=”https://cloudevents.io/”>CloudEvents&lt;/a>. Deze standaard is gekozen omdat deze het beste aansluit bij de aanwezige behoeften en mogelijkheden van Nederlandse overheidsorganisaties. De &lt;a href=&quot;https://semiceu.github.io/LinkedDataEventStreams/&quot;>Linked Data Event Streams&lt;/a> standaard was nog in ontwikkeling en op dat moment (nog) te weinig toepasbaar. De standaard is wel in combinatie met de CloudEvents standaard te gebruiken. CloudEvents wordt vanaf 2018 ontwikkeld binnen de Cloud Native Computing Foundation (CNCF) via een community met onder andere Cloud leveranciers zoals Microsoft, Google en Amazon. Tijdens het project Notificatieservices is door onderzoeksbureau Gartner bevestigd dat de CloudEvents-standaard voldoende toekomst vast was om als basis te gebruiken. &#xD;&#xA;&lt;/p>&lt;p>&#xD;&#xA;&lt;a href=”https://www.asyncapi.com/”>AsyncAPI&lt;/a> is de de facto standaard voor het definiëren van asynchroon werkende API’s en wordt vaak vergeleken met OpenAPI specification. Met behulp van AsyncAPI zijn onder andere het formaat van berichten, de uit te voeren operaties en te gebruiken protocollen gestandaardiseerd te beschrijven. Dit bevordert de kwaliteit van documenteren, ontwerpen, testen en gebruiken van asynchroon werkende API’s. AsyncAPI is onderdeel van de Linux Foundation en wordt actief onderhouden door een open-sourcegemeenschap. De standaard kent een groeiend ecosysteem van tools en bibliotheken die AsyncAPI-specificaties kunnen verwerken, zoals codegeneratoren, validatietools, integraties met API-gateways en meer. AsyncAPI is te combineren met CloudEvents. CloudEvents helpt bij het definiëren van het formaat van de gebeurtenissen en AsyncAPI helpt bij het definiëren van de gebeurtenisgestuurde API's. AsyncAPI kan worden gebruikt om de API en het bijbehorende CloudEvent-formaat te documenteren.&#xD;&#xA;&lt;/p>&lt;p>&#xD;&#xA;Naarmate er meer gebeurtenisgedreven wordt gewerkt wordt het steeds belangrijker om daarbij betrokken metadata gestandaardiseerd vast te leggen en raadplegen. Om events goed te kunnen verwerken moet bekend zijn om wat voor soort event het gaat en wat de precieze betekenis daarvan is. Hiervoor kan gebruik worden gemaakt van catalogi met de beschrijving van event-types en hun relaties. Het is wenselijk dat dit type documentatie wordt gestandaardiseerd omdat consumers met steeds meer producers en soorten events te maken krijgen. Twee internationale initiatieven waarop daarvoor kan worden voortgebouwd zijn: &lt;a href=&quot;https://www.eventcatalog.dev/&quot;>EventCatalog&lt;/a> en &lt;a href=&quot;https://github.com/xregistry/spec&quot;>xRegistry&lt;/a>. EventCatalog is een open source project voor het bijhouden en gebruiken van een register voor het documenteren van events, services and domeinen. xRegistry is een open source project binnen de CloudEvents community dat een abstract model definieert voor het beheren van metagegevens over bronnen met een op REST gebaseerde interface voor het maken, wijzigen, verwijderen en ontdekken van die bronnen. Door middel van domein specifieke uitbreidingen op het core model is ook een register te maken voor het standaard vastleggen van binnen events gebruikte schema’s.&lt;/p>&#xD;&#xA;&lt;h3>De CloudEvents standaard in meer detail&lt;/h3>&#xD;&#xA;&lt;p>&#xD;&#xA;CloudEvents kent een compacte ‘core specificatie’ voor gestandaardiseerde beschrijving van events. Aanvullend zijn er specificaties voor gebruik van de core specificatie met specifieke gegevensformaten (bijvoorbeeld JSON en XML) en transport protocollen (bijvoorbeeld HTTP en AMQP). Standaardisatie strekt zich daarmee uit tot en met implementatieaspecten. Er zijn door de community ondersteunende producten ontwikkeld, zoals System Development Kits (SDK) voor veelgebruikte programmeertalen.&#xD;&#xA;&lt;/p>&lt;p>&#xD;&#xA;Er is een Nederlands profiel op de CloudEvents standaard ontwikkeld: &lt;a href=”https://www.logius.nl/domeinen/gegevensuitwisseling/nl-gov-profile-cloudevents”>NL GOV profile for CloudEvents&lt;/a>. Het bevat een set afspraken over het gebruik van de internationale CloudEvents standaard binnen de Nederlandse overheid. Het beschrijft bijvoorbeeld welke (aanvullende) afspraken gelden met betrekking tot het gebruik van bepaalde attributen. Naast het profiel zelf is er een document &lt;a href=”https://gitdocumentatie.logius.nl/publicatie/notificatieservices/guidelines/”>Guidelines for NL-GOV profile CloudEvents&lt;/a> dat gebruik van de standaard beschrijft bij gebruik van respectievelijk HTTP, JSON, webhooks. Het profiel en de handreiking zijn in beheer bij Logius. Het is de bedoeling dat het profiel op afzienbare termijn wordt opgenomen in de lijst van open standaarden van het Forum voor Standaardisatie.&#xD;&#xA;&lt;/p>&lt;p>&#xD;&#xA;Het centrale begrip in de CloudEvents standaard is ‘event’: een data record met metadata. Het bevat contextattributen om te kunnen notificeren en inhoudelijke gegevens over een plaatsgevonden gebeurtenis (of een verwijzing daarnaar). Een viertal metagegevens moeten volgend de CloudEvents specificatie, en het daarop gebaseerde NL GOV Profile for CloudEvents, altijd aanwezig zijn binnen een event:&#xD;&#xA;&lt;ul>&#xD;&#xA;&lt;li>Een unieke identificatie voor het event (‘id’)&lt;/li>&#xD;&#xA;&lt;li>De bron van het event (‘source’)&lt;/li>&#xD;&#xA;&lt;li>De versie van de gebruikte CloudEvents-specificatie (‘specversion’)&lt;/li>&#xD;&#xA;&lt;li>Het eventtype (‘type’)&lt;/li>&#xD;&#xA;&lt;/ul>&#xD;&#xA;&lt;p>&#xD;&#xA;Het GOV NL profile for CloudEvents bevat afspraken over hoe deze attributen binnen de overheid moeten worden gebruikt. In een event kunnen ook aanvullende metagegevens worden opgenomen. CloudEvents heeft een aantal vaak voorkomende metadata gedefinieerd, maar ze zijn ook zelf te definiëren. Dit kan bijvoorbeeld op sector- of domeinniveau gebeuren.&#xD;&#xA;&lt;/p>&lt;p>&#xD;&#xA;Ook bij gebruik van het NL GOV Profile for CloudEvents is er ruimte voor betrokken organisaties om eigen keuzes te maken. Bijvoorbeeld wat betreft in events op te nemen metadata, het wel of niet opnemen van inhoudelijke data in berichten en gebruikte gegevensformaten, transportprotocollen en technische infrastructuur. Gegevens in een subscription kunnen zowel handmatig als geautomatiseerd worden bijgewerkt. Een samengestelde applicatie kan applicatiecomponenten combineren. Het initiatief voor verstrekking kan liggen bij intermediary of consumer.&#xD;&#xA;&lt;/p>&#xD;&#xA;&lt;h3>Technische aspecten&lt;/h3>&#xD;&#xA;&lt;p>&#xD;&#xA;Bij abonneren en notificeren kunnen veel partijen zijn betrokken. Die hebben vaak verschillende voorkeuren voor gebruik van technologische componenten, gegevensformaten en transportprotocollen. Betrokken voorzieningen kunnen zich in lokale, gehoste en Cloud-omgevingen bevinden en moeten in staat zijn om met elkaar communiceren. Om notificeren flexibel en schaalbaar te ondersteunen is speciale middleware beschikbaar, zoals message- en event-brokers. Gebruik daarvan maakt het zelf ontwikkelen van vergelijkbare software overbodig en maakt het eenvoudiger te voldoen aan niet-functionele eisen zoals het afhandelen van opgetreden fouten. &#xD;&#xA;&lt;/p>&lt;p>&#xD;&#xA;Gebruik van standaarden maakt het mogelijk om gebruik te maken van allerlei (combinaties van) technologische componenten. Gebruik van de CloudEvents standaard maakt het mogelijk om events uit te wisselen tussen verschillend soortige technologiecomponenten. Het feit dat naast de CloudEvents core-specificatie aanvullende standaarden zijn ontwikkeld voor een aantal veelgebruikte formaten en protocollen helpt daarbij. &#xD;&#xA;&lt;p>&#xD;&#xA;">
  <profiles
      href="folder.xml#id-0005c1b00a8b43d58de11d534fb0aeb2"/>
</archimate:Representation>
